name: cache test
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

# orig https://github.com/yury-sannikov/awg-openwrt/blob/master/.github/workflows/build-module.yml
# passwall from https://github.com/xiaorouji/openwrt-passwall/blob/main/.github/workflows/Auto%20compile%20with%20openwrt%20sdk.yml
# 3proxy https://github.com/osnosn/3proxy-openwrt
# helloworld https://github.com/fw876/helloworld

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: [self-hosted, ubuntu]
    # runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.0"
            pkgarch: mipsel_24kc
            target: ramips
            subtarget: mt7621
            vermagic: "9c242f353867f49a96054ff8c9f2c460"
          # - tag: "23.05.2"
          #   pkgarch: mipsel_24kc
          #   target: ramips
          #   subtarget: mt7621
          #   vermagic: "9c242f353867f49a96054ff8c9f2c460"  

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: nipeharefa/gh-actions-local-cache@main
        with:
          path: |
            ./
          key: cache-${{ hashFiles('cache-for-action') }}
          storage: /root/gh-cache

      - name: Checkout openwrt
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

    #   - name: Tree form gits and configs
    #     run: |
    #       # Setup & install feeds
    #       wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
    #       ./scripts/feeds update -a && ./scripts/feeds install -a
    #       wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
    #       make defconfig
    #       make tools/install -i -j `nproc`
    #       make toolchain/install  -i -j `nproc`
    #       make target/linux/compile  -i -j `nproc` V=s

      - name: runrunrun
        run: |
            ls -la

 
